
from packages import *

def Calculate_Required_Battery_Power(P_array, P_aero, P_rolling, P_hill, mot_eff, parasitic_loss, bat_eff_discharge):
    '''This function calculates the required battery power to overcome
    resistive forces (takes into consideration power generated by the array.'''
    Total_Power= ((P_aero+P_rolling+P_hill)/mot_eff)+ parasitic_loss
    return ((Total_Power - P_array)/bat_eff_discharge)
def Calculate_Battery_Capacity_Single_Cell(C, peukert_number, P_batt_req):
    '''Returns the battery capacity value that maps to the P_batt_req.'''
    return (C/(P_batt_req **(peukert_number-1)))
def Calculate_Battery_Capacity_Full_Pack(C, peukert_number, P_batt_req, nr_of_batteries):
    '''Returns the battery capacity outputted by the entire battery pack
    to supply the required power draw P_batt_req.'''
    C_prime= nr_of_batteries * C
    n_prime= peukert_number - (peukert_number-1) * (np.log(nr_of_batteries)/np.log(nr_of_batteries*P_batt_req))
    Battery_Pack_Capacity= C_prime / ((nr_of_batteries*P_batt_req)**(n_prime-1) * nr_of_batteries)
    return Battery_Pack_Capacity
    

